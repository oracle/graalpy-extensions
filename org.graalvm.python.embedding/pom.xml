<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.graalvm.python</groupId>
    <artifactId>graalpy-extensions</artifactId>
    <version>${revision}</version>
  </parent>

  <name>GraalPy embedding utilities</name>
  <artifactId>python-embedding</artifactId>
  <description>GraalPy, a high-performance embeddable Python 3 runtime for Java.
    This artifact provides convenience APIs to embed GraalPy into Java applications.
    Use this dependency if you install additional Python packages with the Maven
    or Gradle plugins for GraalPy.
  </description>
  <url>${project.url.root}</url>
  <scm>
    <connection>${project.scm.connection}</connection>
    <developerConnection>${project.scm.devConnection}</developerConnection>
    <url>${project.scm.url}</url>
  </scm>
  <packaging>jar</packaging>

  <dependencies>
    <dependency>
      <groupId>org.graalvm.polyglot</groupId>
      <artifactId>polyglot</artifactId>
      <version>${project.polyglot.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.graalvm.python</groupId>
      <artifactId>${project.python.artifact}</artifactId>
      <version>${project.polyglot.version}</version>
      <scope>runtime</scope>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${project.junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>${project.hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <!-- We'd have to have a *.bat script for Windows
           and checking on Linux/MacOS in the CI is enough -->
      <id>sigtest-on-unix</id>
      <activation>
        <os>
          <family>Unix</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>sigtest-embedding</id>
                <phase>verify</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${project.basedir}/../scripts/sigtest-check-embedding.sh</executable>
                  <arguments>
                    <argument>-s</argument>
                    <argument>${session.request.userSettingsFile.path}</argument>
                    <argument>-Dlocal.repo.url=${local.repo.url}</argument>
                    <argument>-Drevision=${revision}</argument>
                    <argument>-Dproject.sigtest.version=${project.sigtest.version}</argument>
                    <argument>-Dproject.polyglot.version=${project.polyglot.version}</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Profiles for unit test configurations -->
    <profile>
      <id>isolate</id>
      <dependencies>
        <dependency>
          <groupId>org.graalvm.polyglot</groupId>
          <artifactId>python-isolate</artifactId>
          <version>${project.polyglot.version}</version>
          <scope>runtime</scope>
          <type>pom</type>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <!-- graalpy.embedding on module-path, tests on class-path, + add-opens for internal tests -->
      <id>test.modules</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <argLine>
                --add-opens org.graalvm.truffle/com.oracle.truffle.polyglot=org.graalvm.python.embedding
              </argLine>
              <useModulePath>true</useModulePath>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- graalpy.embedding on module-path, tests on class-path -->
      <id>test.modules.integration</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <useModulePath>true</useModulePath>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.netbeans.tools</groupId>
        <artifactId>sigtest-maven-plugin</artifactId>
        <version>${project.sigtest.version}</version>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <packages>org.graalvm.python.embedding</packages>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <failOnError>true</failOnError>
          <failOnWarnings>true</failOnWarnings>
          <additionalJOptions>
            <additionalJOption>-Xdoclint:all</additionalJOption>
          </additionalJOptions>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- graalpy.embedding and tests on class-path -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <useModulePath>false</useModulePath>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
